{"version":3,"sources":["store/actions/statistics/actionTypes.js","store/actions/statisticsSummary/actionTypes.js","constants/theme.js","store/actions/scrollTacker/actionTypes.js","layout/Pages.js","layout/App.js","serviceWorker.js","model/StatisticsByCountry.js","store/reducers/statistics/statiscticsReducer.js","store/reducers/statisticsSummary/statisticsSummary.js","store/reducers/scrollTacker/scrollTracker.js","store/combineReducers.js","store/store.js","store/middlewares/promise.js","i18n.js","index.js"],"names":["STATISTICS_GET","STATISTICS_GET_SUCCESS","STATISTICS_GET_FAILURE","STATISTICS_GET_REQUEST","STATISTICS_SUMMARY_GET","STATISTICS_SUMMARY_GET_SUCCESS","STATISTICS_SUMMARY_GET_FAILURE","STATISTICS_SUMMARY_GET_REQUEST","theme","light","main","hoverMain","accent","hoverAccent","textPrimary","textSecondary","grayColor","SCROLL_CHANGE","onScrollChange","dispatch","type","MainPage","React","lazy","ErorrPage","Page","path","component","App","Pages","Boolean","window","location","hostname","match","StatisticsByCountry","country","confirmed","deaths","recovered","active","date","this","inialState","statistics","loading","error","continetalDeathData","lat","lon","statisticsSummary","intialState","scrollTrackSet","scrollTrackPercentage","scrollTrackPercentageExact","actualScene","scrollTrackerListFolds","scrollTrackerListCharts","scrollTrackChartsIndex","scrollPosition","scrollTrackerList","i","length","element","document","getElementById","bounding","getBoundingClientRect","shifLevel","innerHeight","top","containerHeight","height","scrollY","windowHeight","totalHeight","n","scrollbarLevel","getCalcPercentage","index","percentage","toFixed","percentageExact","combineReducers","state","action","groupStatsByMonth","groupKey","payload","reduce","r","o","m","Date","split","data","push","group","String","dateGrup","result","Object","keys","map","k","scrollTracker","scrollTrackerFolds","scrollTrackerCharts","key","Countries","key2","Country","TotalDeaths","middleware","thunk","next","promise","rest","then","SUCCESS","FAILURE","REQUEST","response","ok","json","Error","status","catch","message","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","i18n","use","Backend","LanguageDetector","initReactI18next","init","defaultLanguage","otherLanguages","fallbackLng","defaultNS","interpolation","escapeValue","backend","loadPath","ReactDOM","render","fallback","StrictMode","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.acef1f90.chunk.js","sourcesContent":["export const STATISTICS_GET = `STATISTICS_GET`;\r\nexport const STATISTICS_GET_SUCCESS = `STATISTICS_GET_SUCCESS`;\r\nexport const STATISTICS_GET_FAILURE = `STATISTICS_GET_FAILURE`;\r\nexport const STATISTICS_GET_REQUEST = `STATISTICS_GET_REQUEST`;\r\n","export const STATISTICS_SUMMARY_GET = `STATISTICS_SUMMARY_GET`;\r\nexport const STATISTICS_SUMMARY_GET_SUCCESS = `STATISTICS_SUMMARY_GET_SUCCESS`;\r\nexport const STATISTICS_SUMMARY_GET_FAILURE = `STATISTICS_SUMMARY_GET_FAILURE`;\r\nexport const STATISTICS_SUMMARY_GET_REQUEST = `STATISTICS_SUMMARY_GET_REQUEST`;\r\n","const theme = {\r\n  light: {\r\n    main: \"#de393f\",\r\n    hoverMain: \"#9c2126\",\r\n    accent: \"#f49000\",\r\n    hoverAccent: \"#c97700\",\r\n    textPrimary: \"#ffffff\",\r\n    textSecondary: \"#d0d0d0\",\r\n    grayColor: \"#707070\",\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","export const SCROLL_CHANGE = `SCROLL_CHANGE`;\r\n\r\nexport const onScrollChange = () => (dispatch) => {\r\n  dispatch({\r\n    type: SCROLL_CHANGE,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst MainPage = React.lazy(() => import(\"../pages/MainPage\"));\r\n\r\nconst ErorrPage = React.lazy(() => import(\"../pages/ErrorPage\"));\r\n\r\nconst Page = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/\" component={MainPage} />\r\n        <Route component={ErorrPage} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../constants/theme\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Pages from \"./Pages\";\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Pages />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","class StatisticsByCountry {\r\n  constructor(country, confirmed, deaths, recovered, active, date) {\r\n    this.country = country;\r\n    this.confirmed = confirmed;\r\n    this.deaths = deaths;\r\n    this.recovered = recovered;\r\n    this.active = active;\r\n    this.date = date;\r\n  }\r\n}\r\n\r\nexport default StatisticsByCountry;\r\n","import {\r\n  STATISTICS_GET_SUCCESS,\r\n  STATISTICS_GET_FAILURE,\r\n  STATISTICS_GET_REQUEST,\r\n} from \"../../actions/statistics/actionTypes\";\r\n\r\nimport StatisticsByCountry from \"../../../model/StatisticsByCountry\";\r\n\r\nconst inialState = {\r\n  statistics: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const statisticsReducer = (state = inialState, action) => {\r\n  switch (action.type) {\r\n    case STATISTICS_GET_SUCCESS:\r\n      let groupStatsByMonth = [],\r\n        groupKey = 0;\r\n\r\n      groupStatsByMonth = action.payload.reduce((r, o) => {\r\n        let m = o.Date.split(\"-\")[1];\r\n        r[m]\r\n          ? r[m].data.push(\r\n              new StatisticsByCountry(\r\n                o[\"Country\"],\r\n                o[\"Confirmed\"],\r\n                o[\"Deaths\"],\r\n                o[\"Recovered\"],\r\n                o[\"Active\"],\r\n                o[\"Date\"]\r\n              )\r\n            )\r\n          : (r[m] = {\r\n              group: String(groupKey++),\r\n              dateGrup: o.Date.split(\"-\")[0] + \"-\" + o.Date.split(\"-\")[1],\r\n              data: [\r\n                new StatisticsByCountry(\r\n                  o[\"Country\"],\r\n                  o[\"Confirmed\"],\r\n                  o[\"Deaths\"],\r\n                  o[\"Recovered\"],\r\n                  o[\"Active\"],\r\n                  o[\"Date\"]\r\n                ),\r\n              ],\r\n            });\r\n        return r;\r\n      }, {});\r\n\r\n      let result = Object.keys(groupStatsByMonth).map(\r\n        (k) => groupStatsByMonth[k]\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        statistics: result,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case STATISTICS_GET_FAILURE:\r\n      return { ...state, loading: false, error: action.error };\r\n    case STATISTICS_GET_REQUEST:\r\n      return { ...state, loading: true, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  STATISTICS_SUMMARY_GET_SUCCESS,\r\n  STATISTICS_SUMMARY_GET_FAILURE,\r\n  STATISTICS_SUMMARY_GET_REQUEST,\r\n} from \"../../actions/statisticsSummary/actionTypes\";\r\n\r\nimport StatisticsSummary from \"../../../model/StatisticsSummary\";\r\n\r\nconst continetalDeathData = [\r\n  {\r\n    country: \"Poland\",\r\n    deaths: 10000,\r\n    lat: 52.237049,\r\n    lon: 21.017532,\r\n  },\r\n  {\r\n    country: \"Germany\",\r\n    deaths: 10000,\r\n    lat: 51.5167,\r\n    lon: 9.9167,\r\n  },\r\n  {\r\n    country: \"Brazil\",\r\n    deaths: 10000,\r\n    lat: -22.9137531,\r\n    lon: -43.5860654,\r\n  },\r\n  {\r\n    country: \"Argentina\",\r\n    deaths: 10000,\r\n    lat: -34.6156625,\r\n    lon: -58.5033379,\r\n  },\r\n  {\r\n    country: \"Colombia\",\r\n    deaths: 10000,\r\n    lat: 4.6486259,\r\n    lon: -74.2478915,\r\n  },\r\n  {\r\n    country: \"Venezuela (Bolivarian Republic)\",\r\n    deaths: 10000,\r\n    lat: 10.4685529,\r\n    lon: -66.9604059,\r\n  },\r\n  {\r\n    country: \"Bolivia\",\r\n    deaths: 10000,\r\n    lat: -17.3939741,\r\n    lon: -66.198895,\r\n  },\r\n  {\r\n    country: \"Mexico\",\r\n    deaths: 10000,\r\n    lat: 19.3910038,\r\n    lon: -99.2836969,\r\n  },\r\n  {\r\n    country: \"United States of America\",\r\n    deaths: 10000,\r\n    lat: 40.6976637,\r\n    lon: -74.1197637,\r\n  },\r\n\r\n  {\r\n    country: \"Canada\",\r\n    deaths: 10000,\r\n    lat: 57.8768778,\r\n    lon: -101.983303,\r\n  },\r\n  {\r\n    country: \"Japan\",\r\n    deaths: 10000,\r\n    lat: 35.6684415,\r\n    lon: 139.6007845,\r\n  },\r\n\r\n  {\r\n    country: \"China\",\r\n    deaths: 10000,\r\n    lat: 39.9390731,\r\n    lon: 116.1172792,\r\n  },\r\n  {\r\n    country: \"India\",\r\n    deaths: 10000,\r\n    lat: 19.0825223,\r\n    lon: 72.7411019,\r\n  },\r\n  {\r\n    country: \"Australia\",\r\n    deaths: 10000,\r\n    lat: -33.8473567,\r\n    lon: 150.6517965,\r\n  },\r\n  {\r\n    country: \"Papua New Guinea\",\r\n    deaths: 10000,\r\n    lat: -6.4126747,\r\n    lon: 144.1007264,\r\n  },\r\n  {\r\n    country: \"Singapore\",\r\n    deaths: 10000,\r\n    lat: 1.3143394,\r\n    lon: 103.7041656,\r\n  },\r\n  {\r\n    country: \"Philippines\",\r\n    deaths: 10000,\r\n    lat: 14.5965788,\r\n    lon: 120.9445403,\r\n  },\r\n  {\r\n    country: \"Costa Rica\",\r\n    deaths: 10000,\r\n    lat: 10.0306196,\r\n    lon: -84.1518232,\r\n  },\r\n  {\r\n    country: \"Guyana\",\r\n    deaths: 10000,\r\n    lat: 4.9907617,\r\n    lon: -59.2700597,\r\n  },\r\n  {\r\n    country: \"Thailand\",\r\n    deaths: 10000,\r\n    lat: 13.7248936,\r\n    lon: 100.4930264,\r\n  },\r\n  {\r\n    country: \"Iran, Islamic Republic of\",\r\n    deaths: 10000,\r\n    lat: 32.3447836,\r\n    lon: 52.2107014,\r\n  },\r\n\r\n  {\r\n    country: \"United Arab Emirates\",\r\n    deaths: 10000,\r\n    lat: 24.3523893,\r\n    lon: 52.8347334,\r\n  },\r\n  {\r\n    country: \"Madagascar\",\r\n    deaths: 10000,\r\n    lat: -18.887503,\r\n    lon: 47.4424741,\r\n  },\r\n\r\n  {\r\n    country: \"South Africa\",\r\n    deaths: 10000,\r\n    lat: -30.8110621,\r\n    lon: 23.7262252,\r\n  },\r\n  {\r\n    country: \"Angola\",\r\n    deaths: 10000,\r\n    lat: -12.3022934,\r\n    lon: 16.9074263,\r\n  },\r\n\r\n  {\r\n    country: \"Congo (Brazzaville)\",\r\n    deaths: 10000,\r\n    lat: -3.1086141,\r\n    lon: 22.6942209,\r\n  },\r\n\r\n  {\r\n    country: \"Nigeria\",\r\n    deaths: 10000,\r\n    lat: 9.4810814,\r\n    lon: 7.5428826,\r\n  },\r\n\r\n  {\r\n    country: \"Egypt\",\r\n    deaths: 10000,\r\n    lat: 30.0595581,\r\n    lon: 31.2234449,\r\n  },\r\n  {\r\n    country: \"Morocco\",\r\n    deaths: 10000,\r\n    lat: 31.696965,\r\n    lon: -8.006057,\r\n  },\r\n  {\r\n    country: \"Italy\",\r\n    deaths: 10000,\r\n    lat: 41.9102415,\r\n    lon: 12.3959153,\r\n  },\r\n\r\n  {\r\n    country: \"Spain\",\r\n    deaths: 10000,\r\n    lat: 40.4381311,\r\n    lon: -3.8196194,\r\n  },\r\n  {\r\n    country: \"Russian Federation\",\r\n    deaths: 10000,\r\n    lat: 55.5815245,\r\n    lon: 36.8251409,\r\n  },\r\n  {\r\n    country: \"Ethiopia\",\r\n    deaths: 10000,\r\n    lat: 8.5803121,\r\n    lon: 39.2487481,\r\n  },\r\n];\r\n\r\nconst inialState = {\r\n  statisticsSummary: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const statisticsSummaryReducer = (state = inialState, action) => {\r\n  switch (action.type) {\r\n    case STATISTICS_SUMMARY_GET_SUCCESS:\r\n      for (const key of continetalDeathData) {\r\n        for (const key2 of action.payload.Countries) {\r\n          if (key2.Country === key.country) {\r\n            key.deaths = key2.TotalDeaths;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        statisticsSummary: continetalDeathData,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case STATISTICS_SUMMARY_GET_FAILURE:\r\n      return { ...state, loading: false, error: action.error };\r\n    case STATISTICS_SUMMARY_GET_REQUEST:\r\n      return { ...state, loading: true, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SCROLL_CHANGE } from \"../../actions/scrollTacker/actionTypes\";\r\n\r\nconst intialState = {\r\n  scrollTrackSet: 0,\r\n  scrollTrackPercentage: 0,\r\n  scrollTrackPercentageExact: 0,\r\n  actualScene: 0,\r\n  scrollTrackerListFolds: [\r\n    \"HomeContent\",\r\n    \"SymptomsContent\",\r\n    \"StatisticsContent\",\r\n    \"LiveCounterContent\",\r\n  ],\r\n  scrollTrackerListCharts: [\"FirstChart\", \"SecondChart\", \"ThirdChart\"],\r\n  scrollTrackChartsIndex: 0,\r\n};\r\n\r\nconst scrollPosition = (scrollTrackerList) => {\r\n  for (let i = scrollTrackerList.length - 1; i >= 0; i--) {\r\n    const element = document.getElementById(scrollTrackerList[i]);\r\n\r\n    if (element !== null) {\r\n      const bounding = element.getBoundingClientRect();\r\n\r\n      const shifLevel = window.innerHeight / 2; // TO CHANGE !!!!!\r\n\r\n      if (bounding.top - shifLevel <= 0) {\r\n        const containerHeight = bounding.height;\r\n        const scrollPosition = window.scrollY;\r\n        const windowHeight = window.innerHeight;\r\n\r\n        let totalHeight = 0;\r\n        for (let n = scrollTrackerList.length - 1; n >= 0; n--) {\r\n          if (i > n) {\r\n            totalHeight += document\r\n              .getElementById(scrollTrackerList[n])\r\n              .getBoundingClientRect().height;\r\n          }\r\n        }\r\n\r\n        if (i > 0) {\r\n          totalHeight = totalHeight - windowHeight + shifLevel;\r\n        }\r\n\r\n        let scrollbarLevel = containerHeight;\r\n        if (i === 0) {\r\n          scrollbarLevel = scrollbarLevel - windowHeight + shifLevel;\r\n        } else if (i === scrollTrackerList.length - 1) {\r\n          scrollbarLevel = scrollbarLevel - shifLevel;\r\n        }\r\n\r\n        const getCalcPercentage =\r\n          ((scrollPosition - totalHeight) * 100) / scrollbarLevel;\r\n\r\n        return {\r\n          index: i,\r\n          percentage: getCalcPercentage.toFixed(2) * 1,\r\n          percentageExact: getCalcPercentage / 100,\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const scrollTracker = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case SCROLL_CHANGE:\r\n      let scrollTrackerFolds = scrollPosition(state.scrollTrackerListFolds);\r\n\r\n      if (!scrollTrackerFolds)\r\n        scrollTrackerFolds = {\r\n          index: 0,\r\n          percentage: 0,\r\n          percentageExact: 0,\r\n        };\r\n\r\n      let scrollTrackerCharts = scrollPosition(state.scrollTrackerListCharts);\r\n\r\n      let scrollTrackChartsIndex = 0;\r\n      if (scrollTrackerCharts) {\r\n        scrollTrackChartsIndex = scrollTrackerCharts.index;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        scrollTrackPercentage: scrollTrackerFolds.percentage,\r\n        scrollTrackPercentageExact: scrollTrackerFolds.percentageExact,\r\n        scrollTrackSet: scrollTrackerFolds.index,\r\n        scrollTrackChartsIndex: scrollTrackChartsIndex,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { statisticsReducer } from \"./reducers/statistics/statiscticsReducer\";\r\nimport { statisticsSummaryReducer } from \"./reducers/statisticsSummary/statisticsSummary\";\r\nimport { scrollTracker } from \"./reducers/scrollTacker/scrollTracker\";\r\n\r\nexport default combineReducers({\r\n  statistics: statisticsReducer,\r\n  scrollTracker: scrollTracker,\r\n  statisticsSummary: statisticsSummaryReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport rootReducer from \"./combineReducers\";\r\nimport promiseMiddleware from \"./middlewares/promise\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk, promiseMiddleware];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","export default function promiseMiddleware() {\r\n  return function (next) {\r\n    return function (action) {\r\n      const { promise, type, ...rest } = action;\r\n\r\n      if (!promise || typeof promise.then !== \"function\") {\r\n        return next(action);\r\n      }\r\n\r\n      const SUCCESS = `${type}_SUCCESS`;\r\n      const FAILURE = `${type}_FAILURE`;\r\n      const REQUEST = `${type}_REQUEST`;\r\n\r\n      next({ type: REQUEST, ...rest });\r\n\r\n      return promise\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(response.status);\r\n          } else {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then((data) => {\r\n          next({\r\n            type: SUCCESS,\r\n            payload: data,\r\n            ...rest,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          next({ type: FAILURE, error: error.message, ...rest });\r\n        });\r\n    };\r\n  };\r\n}\r\n","import i18n from \"i18next\";\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    defaultLanguage: \"en\",\r\n    otherLanguages: [\"pl\"],\r\n    fallbackLng: \"en\",\r\n    // debug: true,\r\n    defaultNS: \"translation\",\r\n    //saveMissing: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n\r\n    backend: {\r\n      loadPath: \"/covid/locales/{{lng}}/{{ns}}.json\",\r\n    },\r\n\r\n    /* lng: locale.split(\"-\")[0], */\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./layout/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nimport \"./i18n\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback={null}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Suspense>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}